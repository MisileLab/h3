[project]
name = "paper-visualizer"
version = "0.1.0"
description = "Automated NLP paper methodology visualization tool"
authors = [
    {name = "Paper Visualizer Team"}
]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "pydantic-ai>=0.0.14",
    "pymupdf>=1.23.0",
    "openai>=1.0.0",
    "httpx>=0.25.0",
    "pydantic>=2.0.0",
    "rich>=13.0.0",
    "click>=8.0.0",
]

[project.optional-dependencies]
dev = [
    "basedpyright>=1.0.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
]

[project.scripts]
paper-visualizer = "src.main:cli"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.basedpyright]
typeCheckingMode = "strict"
reportMissingImports = "error"
reportMissingTypeStubs = "error"
reportUnknownParameterType = "error"
reportUnknownArgumentType = "error"
reportUnknownLambdaType = "error"
reportUnknownVariableType = "error"
reportUnknownMemberType = "error"
reportUntypedFunctionDecorator = "error"
reportUntypedClassDecorator = "error"
reportUntypedBaseClass = "error"
reportUntypedNamedTuple = "error"

[tool.ruff]
line-length = 88
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.black]
line-length = 88
target-version = ['py311']

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]