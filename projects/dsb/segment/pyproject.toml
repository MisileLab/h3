[project]
name = "electra-jailbreak-guard"
version = "0.1.0"
description = "ELECTRA-based prompt jailbreak detection and guard model"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "torch>=2.0.0",
    "transformers>=4.35.0",
    "peft>=0.6.0",
    "datasets>=2.14.0",
    "accelerate>=0.24.0",
    "safetensors>=0.4.0",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "pydantic>=2.5.0",
    "scikit-learn>=1.3.0",
    "numpy>=1.24.0",
    "pandas>=2.1.0",
    "tqdm>=4.66.0",
    "wandb>=0.16.0",
    "tensorboard>=2.15.0",
    "seaborn>=0.13.0",
    "matplotlib>=3.8.0",
    "python-multipart>=0.0.6",
    "aiofiles>=23.2.0",
    "loguru>=0.7.0",
    "pyyaml>=6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
]

[project.scripts]
electra-train = "src.training.cli:main"
electra-serve = "src.api.cli:main"

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "datasets.*",
    "transformers.*",
    "peft.*",
    "wandb.*",
    "tensorboard.*",
    "seaborn.*",
    "matplotlib.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[dependency-groups]
dev = [
    "black>=25.9.0",
    "flake8>=7.3.0",
    "mypy>=1.18.2",
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
]
