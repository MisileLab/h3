---
import "../styles/pretendard.css"
import Layer1 from "../components/layer1.astro"
import Text from "../components/text.astro"
import Bold from "../components/bold.astro"

import { parseInt } from "@misile/satellite"

interface Event {
	name: string;
	startDay: number;
	endDay: number;
}

function event_to_string(e: Event) {
	if (e.endDay == e.startDay) {
		return e.startDay.toString()
	} else {
		return `${e.startDay}~${e.endDay}`
	}
}

const base_url = "https://npi.ny64.kr"
const date = new Date()
const d = date.getMonth()+1
const response = await fetch(`${base_url}/snt_schedule?month=${d}`)
const l: Event[] = [];

for (const i of (await response.json())["data"]) {
	console.log(i)
	if (l.length == 0 || l[l.length-1]["name"] != i["event"]) {
		l.push({
			name: i["event"],
			startDay: parseInt(i["date"].slice(i["date"].length-2)),
			endDay: parseInt(i["date"].slice(i["date"].length-2))
		})
	} else {
		l[l.length-1]["endDay"] = parseInt(i["date"].slice(i["date"].length-2))
	}
}

---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>slunch-web</title>
	</head>
	<body class="bg-background">
		<div class="w-full flex flex-col gap-y-4 px-96">
			<div class="flex flex-row justify-between w-full">
				<Text>sus</Text>
				<Text>asdf</Text>
			</div>
			<Layer1>
				<Bold>Calendar</Bold>
				{l.map((v)=><Text>{
					`${event_to_string(v)} - ${v.name}`}
				</Text>)}
			</Layer1>
			<Layer1>
				<Bold>lunch</Bold>
				<Text>- a</Text>
			</Layer1>
			<Layer1>
				<Bold>lunch comment (beta)</Bold>
				<Text>- hi</Text>
			</Layer1>
			<Layer1>
				<Bold>class time</Bold>
				<Text>sus</Text>
			</Layer1>
		</div>
	</body>
</html>
