---
import Content from "../../../components/content.astro"
---

<Content title="Monorepo로의 전환 경험 요약" description="" isnews={true} date={1731170544}>
  <ul>
    <li><strong>전환 배경</strong>: Ente는 개인 데이터를 안전하게 저장하기 위한 플랫폼을 만드는 것에서 시작해서 다양한 앱을 만들게 됨</li>
    <li><strong>모노레포 결정</strong>: 여러 레포지토리에서의 경험을 바탕으로 관리 효율성을 위해 모노레포로 전환하기로 결정함</li>
  </ul>
  
  <h1>모노레포의 장점</h1>
  <ul>
    <li><strong>간소화된 작업</strong>: 여러 앱에 적용되는 변경 사항을 단일 PR로 처리 가능</li>
    <li><strong>서브모듈 의존성 감소</strong>: 코드 연동성 향상</li>
  </ul>

  <h1>조직적 유연성</h1>
  <ul>
    <li><strong>기존 워크플로우 유지</strong>: 개발자들이 갈등 없이 기존 작업 방식 유지 가능하게 만듬</li>
    <li><strong>장기적인 리팩토링</strong>: 코드를 간편하게 리팩토링 및 재사용 가능함</li>
  </ul>

  <h1>댓글 요약</h1>
  <ul>
    <li><strong>코드 변경 및 관리</strong>: 모노레포 전환으로 단일 PR로 여러 레포의 변경을 쉽게 관리함</li>
    <li><strong>개발자 편의</strong>: 동일한 로컬 환경 사용으로 버그 추적 및 회귀 분석 용이함</li>
    <li><strong>버전 관리의 필요성</strong>: 마이크로서비스 환경에서는 효과적인 버전 관리가 필수적임</li>
    <li><strong>독립 배포</strong>: 서비스가 독립적으로 배포될 경우 별도의 레포가 더 유리함</li>
    <li><strong>지속적 배포</strong>: CI/CD와 함께 배포 명세를 명확히 관리해야 함</li>
    <li><strong>버전 정렬</strong>: 동일한 버전 관리가 문제 해결을 용이하게 만들 수 있음</li>
  </ul>
</Content>
