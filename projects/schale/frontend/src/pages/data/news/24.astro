# Boring SSH Tunnel Manager

- **저자**: alebeck
- **라이선스**: MIT 라이선스
- **별점**: 248
- **포크**: 6

## 기능
- 매우 경량 및 빠른 속도
- 로컬 및 원격 터널 지원
- SSH 구성 및 ssh-agent와의 호환성
- 유닉스 소켓 지원
- 자동 재연결 기능
- TOML을 통한 사람 친화적인 구성

## 사용법
- **명령어**:
  - `boring list` - 모든 터널 나열
  - `boring open <name1> [<name2> ...]` - 지정된 터널 열기
  - `boring close <name1> [<name2> ...]` - 지정된 터널 닫기

## 구성
- 구성은 `~/.boring.toml`에서 읽어옴
- `name`, `local`, `remote`, `host`, `user`, `identity`와 같은 옵션 구조 포함

## 설치
- 사전 빌드된 바이너리를 다운로드하거나 소스에서 빌드할 수 있음:
  ```
  git clone https://github.com/alebeck/boring && cd boring
  ./build.sh
  ```
- 현재 macOS 및 Linux만 지원.

## 소개
- 개발 워크플로우를 개선하기 위해 설계된 간단하고 신뢰할 수 있는 커맨드라인 SSH 터널 관리자입니다.

[GitHub 리포지토리](https://github.com/alebeck/boring)에서 더 많은 정보를 확인하세요.

---

# "Show HN: I made an SSH tunnel manager to learn Go" 댓글 요약

- 사용자들은 사용 용이성과 Go SSH 라이브러리의 높은 품질을 칭찬하며 효과성에 대해 언급함.
- 네이티브 Go SSL 라이브러리에 대한 성능 우려가 제기되었으며, 이들이 애플리케이션 속도를 저하시킬 수 있다고 언급.
- Go SSH 라이브러리의 유지 관리에 관한 토론이 이루어졌고, 해결되지 않은 문제와 서드파티 솔루션의 필요성에 대한 강조가 있었음.
- 한 사용자가 Go의 SSH 처리와 관련된 일반 문제를 해결하는 knownhosts 래퍼 패키지 경험을 공유.
- 독립 패키지 유지 관리 개념에 대한 논의와 유지 관리자의 지속성에 대한 우려가 존재함.
- 사용자는 더 나은 압축 지원과 SSH 서버 내장 사용 사례에 대해 언급함.
- 일부 사용자는 Rust에 비해 Go의 가독성과 직관성을 높이게 된 점을 강조함.
- CLI 기능 확장 제안으로 UI 개선을 위한 Bubble Tea 탐색이 포함됨.
- SSH 터널 관리자 향후 기능 아이디어, 예를 들어 Windows 지원 및 SOCKS 프록시 추가에 대해 언급됨.

## 주목할 만한 통찰
- 사용자는 터널이 끊어질 경우 연결 처리 및 CPU 스파이크에 대한 질문을 하여 지수 백오프 전략에 대한 강조가 있었음.
- 프로젝트 제목에 대한 초기 혼란이 있었으며, 언어 사용 및 프로젝트 명확성에 대한 논의가 이루어짐.