# AUTOGENERATED FROM 'queries/credit/set_credit.edgeql' WITH:
#     $ edgedb-py


from __future__ import annotations
import dataclasses
import edgedb
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class SetCreditResult(NoPydanticValidation):
    id: uuid.UUID


async def set_credit(
    executor: edgedb.AsyncIOExecutor,
    *,
    userid: int,
    credit: int,
) -> SetCreditResult:
    return await executor.query_single(
        """\
        insert User {
          userid := <int64>$userid,
          credit := <int64>$credit
        } unless conflict on .userid else (
          update User set {
            credit := <int64>$credit
          })\
        """,
        userid=userid,
        credit=credit,
    )
