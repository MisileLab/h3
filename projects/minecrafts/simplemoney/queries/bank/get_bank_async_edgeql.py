# AUTOGENERATED FROM 'queries/bank/get_bank.edgeql' WITH:
#     $ edgedb-py


from __future__ import annotations
import dataclasses
import edgedb
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class GetBankResult(NoPydanticValidation):
    id: uuid.UUID
    amount: int
    name: str
    owner: GetBankResultOwner


@dataclasses.dataclass
class GetBankResultOwner(NoPydanticValidation):
    id: uuid.UUID
    userid: int


async def get_bank(
    executor: edgedb.AsyncIOExecutor,
    *,
    name: str,
) -> GetBankResult | None:
    return await executor.query_single(
        """\
        select default::Bank {
          id,
          amount,
          name,
          owner: {userid}
        }
        filter .name = <str>$name\
        """,
        name=name,
    )
