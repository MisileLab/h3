# AUTOGENERATED FROM 'queries/loan/refresh_loan.edgeql' WITH:
#     $ edgedb-py


from __future__ import annotations
import dataclasses
import datetime
import edgedb
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class RefreshLoanResult(NoPydanticValidation):
    id: uuid.UUID


async def refresh_loan(
    executor: edgedb.AsyncIOExecutor,
    *,
    date: datetime.datetime,
    interest: int,
    id: uuid.UUID,
    credit: int,
    userid: uuid.UUID,
) -> RefreshLoanResult | None:
    return await executor.query_single(
        """\
        update Loan filter .id = <uuid>$id set {
          date := <datetime>$date,
          interest := <int64>$interest
        };
        update User filter .id = <uuid>$userid set {
          credit := <int64>$credit
        };\
        """,
        date=date,
        interest=interest,
        id=id,
        credit=credit,
        userid=userid,
    )
