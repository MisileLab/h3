# AUTOGENERATED FROM 'queries/loan/get_loan_bank.edgeql' WITH:
#     $ edgedb-py


from __future__ import annotations
import dataclasses
import datetime
import edgedb
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class GetLoanBankResult(NoPydanticValidation):
    id: uuid.UUID
    date: datetime.datetime
    interest: int
    amount: int
    receiver: uuid.UUID
    product: GetLoanBankResultProduct


@dataclasses.dataclass
class GetLoanBankResultProduct(NoPydanticValidation):
    id: uuid.UUID
    interest: int


async def get_loan_bank(
    executor: edgedb.AsyncIOExecutor,
    *,
    name: str,
) -> list[GetLoanBankResult]:
    return await executor.query(
        """\
        select (select Bank {loans: {date, interest, amount, receiver, product: {interest}}} filter .name = <str>$name).loans;\
        """,
        name=name,
    )
