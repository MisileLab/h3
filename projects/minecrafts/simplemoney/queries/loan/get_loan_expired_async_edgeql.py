# AUTOGENERATED FROM 'queries/loan/get_loan_expired.edgeql' WITH:
#     $ edgedb-py


from __future__ import annotations
import dataclasses
import datetime
import edgedb
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class GetLoanExpiredResult(NoPydanticValidation):
    id: uuid.UUID
    receiver: uuid.UUID
    date: datetime.datetime
    product: GetLoanExpiredResultProduct
    amount: int
    interest: int


@dataclasses.dataclass
class GetLoanExpiredResultProduct(NoPydanticValidation):
    id: uuid.UUID
    end_date: int
    interest: int


async def get_loan_expired(
    executor: edgedb.AsyncIOExecutor,
) -> list[GetLoanExpiredResult]:
    return await executor.query(
        """\
        select Loan {id, receiver, date, product: {end_date, interest}, amount, interest} filter .date < datetime_current();\
        """,
    )
