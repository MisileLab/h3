# AUTOGENERATED FROM 'queries/products/add_product.edgeql' WITH:
#     $ edgedb-py


from __future__ import annotations
import dataclasses
import edgedb
import uuid


class NoPydanticValidation:
    @classmethod
    def __get_pydantic_core_schema__(cls, _source_type, _handler):
        # Pydantic 2.x
        from pydantic_core.core_schema import any_schema
        return any_schema()

    @classmethod
    def __get_validators__(cls):
        # Pydantic 1.x
        from pydantic.dataclasses import dataclass as pydantic_dataclass
        _ = pydantic_dataclass(cls)
        cls.__pydantic_model__.__get_validators__ = lambda: []
        return []


@dataclasses.dataclass
class AddProductResult(NoPydanticValidation):
    id: uuid.UUID


async def add_product(
    executor: edgedb.AsyncIOExecutor,
    *,
    name: str,
    interest: int,
    min_trust: int,
    end_date: int,
    bank_name: str,
) -> AddProductResult | None:
    return await executor.query_single(
        """\
        update Bank filter .name = <str>$bank_name set {
          products += (insert Product {
            name := <str>$name,
            interest := <int64>$interest,
            min_trust := <int64>$min_trust,
            end_date := <int64>$end_date
          })
        }\
        """,
        name=name,
        interest=interest,
        min_trust=min_trust,
        end_date=end_date,
        bank_name=bank_name,
    )
