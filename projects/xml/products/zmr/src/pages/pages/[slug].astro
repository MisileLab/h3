---
import { getCollection } from "astro:content";
import Page from "../../components/page/page.astro"
import Post from "../../components/page/post.astro";
import { parseInt } from "@misile/satellite";

interface NotReadyObject {
  params: {
    slug: number
  },
  props: {
    slug: number[]
    data: any[]
  }
}

export const getStaticPaths = async () => {
  const collections = await getCollection("urandom");
  const returnValue: NotReadyObject[] = []
  let tmp = 1
  let tmpValue: NotReadyObject = {
    params: {
      slug: 0
    },
    props: {
      slug: [],
      data: []
    }
  }
  collections.forEach(e => {
    if (tmp >= 12) {
      tmpValue.params.slug += 1
      returnValue.push(tmpValue)
      tmpValue.props.slug = []
      tmpValue.props.data = []
      tmp = 1
    } else {
      tmpValue.props.slug.push(parseInt(e.slug))
      tmpValue.props.data.push(e.data)
      tmp += 1
    }
  });
  if (tmpValue.props.slug.length !== 0) {
    tmpValue.params.slug += 1
    returnValue.push(tmpValue)
  }
  return returnValue.map((e) => e);
}

const { slug, data } = Astro.props;
const { slug: id } = Astro.params;
---

<Page id={id}>
  {slug.map((e)=>
    <Post id={e} title={data[e-1].title} tldr={data[e-1].tldr} />
  )}
</Page>
