from _typeshed import DataclassInstance, Incomplete
from dataclasses import dataclass

edge_db: bool

class DB:
    db: Incomplete
    def __init__(self, *args, **kwargs) -> None: ...
    async def query(self, query: str, *args, **kwargs) -> list[DataclassInstance]: ...
    async def query_single(self, query: str, *args, **kwargs) -> DataclassInstance | None: ...
    async def query_required_single(self, query: str, *args, **kwargs) -> DataclassInstance | None: ...

@dataclass
class Error:
    detail: str | None
    def __init__(self, detail) -> None: ...

def generate_error_responses(status_codes: list[int]) -> dict[int | str, dict[str, type[Error]]]: ...
